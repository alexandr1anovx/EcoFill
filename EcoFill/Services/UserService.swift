//
//  UserService.swift
//  EcoFill
//
//  Created by Alexander Andrianov on 21.06.2025.
//

import Foundation
import FirebaseFirestore
import FirebaseAuth

protocol UserServiceProtocol {
  func fetchAppUser(uid: String) async throws -> AppUser?
  func createOrUpdateAppUser(user: AppUser) async throws
  func deleteUserDocument(withPassword: String) async throws
}

final class UserService: UserServiceProtocol {
  
  private let db = Firestore.firestore()
  private let userCollection = "users"
  
  func fetchAppUser(uid: String) async throws -> AppUser? {
    let documentReference = db.collection(userCollection).document(uid)
    let document = try await documentReference.getDocument()
    if document.exists {
      return try document.data(as: AppUser.self)
    } else {
      return nil
    }
  }
  
  func createOrUpdateAppUser(user: AppUser) async throws {
    guard let uid = user.id else {
      throw AuthErrorCode(.userNotFound)
    }
    try db
      .collection(userCollection)
      .document(uid)
      .setData(from: user, merge: true)
  }
  
  func deleteUserDocument(withPassword password: String) async throws {
    guard let user = Auth.auth().currentUser,
          let email = user.email else {
      throw AuthErrorCode(.userNotFound)
    }
    let credential = EmailAuthProvider.credential(
      withEmail: email,
      password: password
    )
    try await user.reauthenticate(with: credential)
    try await db
      .collection(userCollection)
      .document(user.uid)
      .delete()
  }
}

// –ù–∞—à –º–æ–∫–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
final class MockUserService: UserServiceProtocol {
    
    // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –≥–æ—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–µ–≤—å—é.
    // UID –∑–¥–µ—Å—å –Ω–µ –≤–∞–∂–µ–Ω, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ–≥–¥–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ.
    func fetchAppUser(uid: String) async throws -> AppUser? {
        print("ü§ñ MockUserService: –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        
        return AppUser(
          uid: "mock_user_123",
          fullName: "–¢–µ—Å—Ç–æ–≤–∏–π –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á",
          email: "preview@example.com",
          city: "city.mykolaiv"
        )
    }
    
    // –í –ø—Ä–µ–≤—å—é –Ω–∞–º –Ω–µ –Ω—É–∂–Ω–æ —Ä–µ–∞–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    // –ø–æ—ç—Ç–æ–º—É –æ—Å—Ç–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ –ø—É—Å—Ç—ã–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º print –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
    func createOrUpdateAppUser(user: AppUser) async throws {
        print("ü§ñ MockUserService: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å \(user.fullName) '–æ–±–Ω–æ–≤–ª–µ–Ω'.")
        // –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    }
    
    // –¢–æ –∂–µ —Å–∞–º–æ–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
    func deleteUserDocument(withPassword: String) async throws {
        print("ü§ñ MockUserService: –î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '—É–¥–∞–ª–µ–Ω'.")
        // –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    }
}
